seed_everything: 42
trainer:
  default_root_dir: ${oc.env:PDEARENA_OUTPUT_DIR,outputs}
  logger:
    class_path: pytorch_lightning.loggers.tensorboard.TensorBoardLogger
    init_args:
      save_dir: ${trainer.default_root_dir}/tb
      name: null
      version: null
      log_graph: False
      default_hp_metric: True
      prefix: ""

  enable_checkpointing: true
  callbacks:
    - class_path: pytorch_lightning.callbacks.Timer
      init_args:
        interval: "epoch"
    - class_path: pytorch_lightning.callbacks.RichModelSummary
      init_args:
        max_depth: -1
    - class_path: pytorch_lightning.callbacks.LearningRateMonitor
      init_args:
        logging_interval: "step"
    - class_path: pytorch_lightning.callbacks.TQDMProgressBar
      init_args:
        refresh_rate: 1

  gradient_clip_val: null
  gradient_clip_algorithm: null

  num_nodes: 1
  num_processes: null
  devices: null
  gpus: null
  auto_select_gpus: false
  tpu_cores: null
  ipus: null

  enable_progress_bar: true
  overfit_batches: 0.0
  track_grad_norm: -1
  check_val_every_n_epoch: 20
  fast_dev_run: false
  accumulate_grad_batches: null
  max_epochs: 200
  min_epochs: null
  max_steps: -1
  min_steps: null
  max_time: null
  limit_train_batches: null
  limit_val_batches: null
  limit_test_batches: null
  limit_predict_batches: null
  val_check_interval: null

  log_every_n_steps: 50
  accelerator: gpu
  strategy: null
  sync_batchnorm: false
  precision: 32
  enable_model_summary: true

  weights_save_path: null
  num_sanity_val_steps: 2
  resume_from_checkpoint: null
  profiler: null
  benchmark: null
  deterministic: null
  reload_dataloaders_every_n_epochs: 0
  auto_lr_find: false
  replace_sampler_ddp: true
  detect_anomaly: false
  auto_scale_batch_size: false
  amp_backend: native
  amp_level: null
  move_metrics_to_cpu: false
  multiple_trainloader_mode: max_size_cycle

model:
  name: "Unetmod-2d-64"  # Use 2D U-Net architecture
  max_num_steps: 1000
  activation: "gelu"
  criterion: mse
  lr: 1e-4
  param_conditioning: "scalar_2"
  padding_mode: "circular"
  predict_difference: True
  difference_weight: 0.3
  min_noise_std: 4e-7
  num_refinement_steps: 3
  time_history: 4   # Match t_in from ns2d_pda dataset
  time_future: 1    # Match t_ar from your dataset
  time_gap: 0

# Data configuration for TemporalDataset2D
data:
  # Dataset selection from your DATASET_DICT
  data_name: "ns2d_pda"  # Using ns2d_pda dataset
  
  # Temporal parameters (matching ns2d_pda configuration)
  t_in: 4       # Number of input time steps (ns2d_pda default)
  t_ar: 1       # Number of autoregressive output steps
  
  # Data processing
  normalize: false        # Enable/disable normalization
  n_channels: null       # Override number of channels (null = use dataset default)
  downsample: null       # Override downsample factor (null = use dataset default)
  
  # Training parameters  
  batch_size: 16        # Reduced for larger ns2d_pda resolution
  pin_memory: true
  num_workers: 2
  
  # Limit trajectories for debugging (-1 = use all)
  train_limit_trajectories: -1
  valid_limit_trajectories: -1
  test_limit_trajectories: -1
  
  # PDE configuration for model compatibility (ns2d_pda specific)
  pde:
    n_scalar_components: 1  # ns2d_pda has 3 channels, treating as 1 scalar + 2 vector
    n_vector_components: 2  # u, v velocity components
    trajlen: 14            # ns2d_pda has 14 time steps total
    n_spatial_dim: 2       # 2D data

optimizer:
  class_path: torch.optim.Adam
  init_args:
    lr: 1e-4

lr_scheduler:
  class_path: pdearena.lr_scheduler.LinearWarmupCosineAnnealingLR
  init_args:
    warmup_epochs: 0
    max_epochs: 200
    warmup_start_lr: 1e-8
    eta_min: 1e-6
